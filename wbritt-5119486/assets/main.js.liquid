(function($, window){

    var mainNavBtn          = $('.main-nav-btn'),
        mainNavCon          = $('.main-nav-container'),
        theBody             = $('body'),
        shopLinkBtn         = $('.shop-link-btn'),
        infoLinkBtn         = $('.info-link-btn'),
        followLinkBtn       = $('.follow-link-btn'),
        customerCareLinkBtn = $('.customer-care-link-btn'),
        subnavCons          = $('.subnav-con'),
        searchBtn           = $('.open-search-btn'),
        searchBox           = $('.search-box');

    // main nav open button
    mainNavBtn.on('click', function(e){
        e.preventDefault(e);
        theBody.toggleClass('open-main-nav');
        // mainNavCon.fadeToggle('slow');
    });

    // shop nav button
    shopLinkBtn.on('click', function(e) {
        e.preventDefault(e);
        var $this = $(this)
            $parent = $this.parent();
        if ($parent.hasClass('is-open')) {
            subnavCons.fadeOut('slow');
            $parent.removeClass('is-open');
        } else {
            subnavCons.fadeOut('slow');
            mainNavCon.find('.is-open').removeClass('is-open');
            $('.shop-links').fadeToggle('slow');
            $parent.toggleClass('is-open');
        }
    });

    // info nav button
    infoLinkBtn.on('click', function(e) {
        e.preventDefault(e);
        var $this = $(this)
            $parent = $this.parent();
        if ($parent.hasClass('is-open')) {
            subnavCons.fadeOut('slow');
            $parent.removeClass('is-open');
        } else {
            subnavCons.fadeOut('slow');
            mainNavCon.find('.is-open').removeClass('is-open');
            $('.info-links').fadeToggle('slow');
            $parent.toggleClass('is-open');
        }
    });

    // follow nav button
    followLinkBtn.on('click', function(e) {
        e.preventDefault(e);
        var $this = $(this)
            $parent = $this.parent();
        if ($parent.hasClass('is-open')) {
            subnavCons.fadeOut('slow');
            $parent.removeClass('is-open');
        } else {
            subnavCons.fadeOut('slow');
            mainNavCon.find('.is-open').removeClass('is-open');
            $('.follow-links').fadeToggle('slow');
            $parent.toggleClass('is-open');
        }
    });

    // customer care nav button
    customerCareLinkBtn.on('click', function(e) {
        e.preventDefault(e);
        var $this = $(this)
            $parent = $this.parent();
        if ($parent.hasClass('is-open')) {
            subnavCons.fadeOut('slow');
            $parent.removeClass('is-open');
        } else {
            subnavCons.fadeOut('slow');
            mainNavCon.find('.is-open').removeClass('is-open');
            $('.customer-care-links').fadeToggle('slow');
            $parent.toggleClass('is-open');
        }
    });

    // open search box
    searchBtn.on('click', function(e){
        e.preventDefault();
        searchBox.toggleClass('search-showing');
    });


    // 
    //    some page specific JS
    //

    // about section
    var $about = $('.about-section');

    if ($about.length > 0) {
        // var available_height = $(window).height() - parseInt($('.wrapper').css('margin-top'));
        // $('body').css({
        //     'height' : available_height + 'px',
        //     'overflow' : 'hidden'
        // });
        $('body').css({
            'overflow' : 'hidden',
            'height' : '100%'
        })
    }

    // set height based on window
    var $setHeight = $('.set-height');

    if ($setHeight.length > 0) {
        var availableHeight = $(window).height() - parseInt($('.wrapper').css('margin-top')) - 32,
            bgImg = $('.interior-full-page-image');

        $setHeight.css('height', availableHeight + 'px').removeClass('invisible');

    }

    //  press section
    var $press = $('.press-section');

    if ($press.length > 0) {
        var $pressLinks      = $('.press-nav').find('a'),
            $mainImageHolder = $('.main-press-img'),
            $pressTitle      = $('.press-title'),
            $pressDate       = $('.press-date'),
            $pressProduct    = $('.press-product-link'),
            $prevBtn         = $('.product-prev-btn'),
            $nextBtn         = $('.product-next-btn'),
            currArticleIndex = 0;

        // lets set the image size to match the screen size
        var availableHeight = $(window).height() - parseInt($('.wrapper').css('margin-top')) - parseInt($press.css('padding-top')) - parseInt($press.css('padding-bottom')) - $pressTitle.outerHeight() - $pressDate.outerHeight() - $pressProduct.outerHeight() - 32;

        var pressHeight = $(window).height() - parseInt($('.wrapper').css('margin-top')) - 16;

        $press.css('height', pressHeight + 'px');

        var html = '<img src="' + $pressLinks[0].href +'">';
        $mainImageHolder.append(html);
        var $mainImage = $mainImageHolder.find('img');
        $mainImage.css({
            'max-height': availableHeight + 'px',
            width: 'auto',
            'max-width': '100%'
        });
        $mainImageHolder.zoom({
            'url' : $pressLinks[0].href
        });
        var currLink = $($pressLinks[0]);
        currLink.addClass('active');

        var prPubLink = currLink.attr('data-pub-link');
        if (prPubLink) {
            if (prPubLink !== '') {
                var html = '<a href="' + prPubLink + '" target="_blank">' + currLink.attr('data-title') + '</a>';
                $pressTitle.empty().append(html);

            } else {
                $pressTitle.empty().append(currLink.attr('data-title'));    
            }
        } else {
            $pressTitle.empty().append(currLink.attr('data-title'));
        }

        $pressDate.text(currLink.attr('data-pub-date'));
        
        var prProduct = currLink.attr('data-product-link');

        if (prProduct) {
            if(prProduct !== '') {
                $pressProduct.attr('href', prProduct);
            }
            $pressProduct.removeClass('invisible');
        }

        // show the page
        $press.removeClass('invisible');

        function findPrevLink() {
            var prevIndex;

            if (currArticleIndex === 0) {
                prevIndex  = $pressLinks.length - 1;
            } else {
                prevIndex = currArticleIndex - 1;
            }

            currArticleIndex = prevIndex;
            
            return $pressLinks[prevIndex];

        }

        function findNextLink() {
            var nextIndex;

            if (currArticleIndex === ($pressLinks.length - 1)) {
                nextIndex  = 0;
            } else {
                nextIndex = currArticleIndex + 1;
            }

            currArticleIndex = nextIndex;
            
            return $pressLinks[nextIndex];
        }

        function changeArticle (currLink) {
            $('.press-nav').find('.active').removeClass('active');
            currLink.addClass('active');
            $mainImage[0].src = currLink.attr('href');
            $mainImageHolder.trigger('zoom.destroy');
            $mainImageHolder.zoom({
                'url' : currLink.attr('href')
            });
            
            var prPubLink = currLink.attr('data-pub-link');
            if (prPubLink) {
                if (prPubLink !== '') {
                    var html = '<a href="' + prPubLink + '" target="_blank">' + currLink.attr('data-title') + '</a>';
                    $pressTitle.empty().append(html);

                } else {
                    $pressTitle.empty().append(currLink.attr('data-title'));    
                }
            } else {
                $pressTitle.empty().append(currLink.attr('data-title'));
            }

            $pressDate.text(currLink.attr('data-pub-date'));
            
            var prProduct = currLink.attr('data-product-link');

            if (prProduct) {
                if (prProduct !== '') {
                    $pressProduct.attr('href', prProduct);
                } else {
                    $pressProduct.addClass('invisible');
                }
                $pressProduct.removeClass('invisible');
            } else {
                $pressProduct.addClass('invisible');
            }
        }

        $prevBtn.on('click', function(e){
            e.preventDefault();
            var currArticle = $(findPrevLink());
            changeArticle(currArticle);
        });

        $nextBtn.on('click', function(e){
            e.preventDefault();
            var currArticle = $(findNextLink());
            changeArticle(currArticle);
        });

        $pressLinks.on('click', function(e){
            e.preventDefault();
            currLink = $(this);
            currArticleIndex = currLink.parent().index();
            changeArticle(currLink);
        });
    }


})(jQuery, window)


// layout 

$(window).load(function(){

    // get the window width to see what we're deailing with
    var win_width          = $(window).width(),
        full_scale         = 325, // how big should the photo be? 
        og_padding_width   = 425,
        begin_reduce_width = 100, //1020,
        last_item_index    = 0,
        curr_elem_image,
        elem_width         = 744,
        elem_height        = 450,
        collectionImg      = {}, // collection image state before opening product
        productImg         = {}; // product image state before using image enlarger


    // if the window is less than arbitrary size
    // shrink all the sizes
    if (win_width < begin_reduce_width) {
        full_scale = full_scale / begin_reduce_width * win_width;
        og_padding_width = og_padding_width / begin_reduce_width * win_width;
    }

    // Randomize image sizes
    $('.container').find('.element').each(function(){
        var $image = $(this).find('img');

        // scale images
        // on smaller screens the images will get smaller
        // the window width check above 
        var scale_factor = 1,
            img_scale;

        switch ($(this).attr('data-category')) {
          
            case 'special-75':
                scale_factor = .85;
                img_scale = scale_factor * full_scale;
                $image.css('width', img_scale + 'px');
                break;

            case 'rings':
                scale_factor = .35;
                img_scale = scale_factor * full_scale;
                $image.css('width', img_scale + 'px');
                break;
            
            case 'hoops':
                scale_factor = .53;
                img_scale = scale_factor * full_scale;
                $image.css('width', img_scale + 'px');
                break;

            case 'bracelets':
                scale_factor = .70;
                img_scale = scale_factor * full_scale;
                $image.css('width', img_scale + 'px');
                break;

            case 'pendants':
                scale_factor = 1;
                img_scale = scale_factor * full_scale;
                $image.css('width', img_scale + 'px');
                break;

            case 'studs':
                scale_factor = .29;
                img_scale = scale_factor * full_scale;
                $image.css('width', img_scale + 'px');
                break;

            default:
                scale_factor = 1.3;
                img_scale = scale_factor * full_scale;
                $image.css('width', img_scale + 'px');
                break;
        }

        if ($(this).index() > 0) {
          var padding_counterfactor = Math.max(0,(og_padding_width - $(this).prev().width()) / (og_padding_width / 2));
          //console.log('counterfactor: '+padding_counterfactor);
        } else {
          var padding_counterfactor = 0;
        }

        var image_width = $image.width(),
            image_height = $image.height(),
            image_padding_x = 25+Math.round((og_padding_width-image_width)*Math.random()*padding_counterfactor/25)*25,
            image_padding = Math.round((og_padding_width-image_width)*Math.random()/25)*25;

            
        // special case for first image
        if ($(this).index() === 0) {
            image_padding_x = (200 - img_scale);
        }

        // special case for second image
        if ($(this).index() === 1) {
            image_padding_x = (og_padding_width - img_scale);
        }
       
        // Ensure padding will bring image up to a multiple of 25px for grid regularity
        // Also, cap it at 200 px to avoid really big padding for the smallest items;
      	image_padding_x = Math.min(200,image_padding_x);
        //image_padding_x = Math.min(200,Math.round((image_padding_x + image_width)/25)*25 - image_width);
        image_padding_x = Math.round((image_padding_x + image_width)/25)*25 - image_width - 4;

        // protect against negative padding
        if (image_padding_x < 0) image_padding_x = 0;

        var image_padding_y = Math.round((image_padding_x + image_height)/25)*25 - image_height - 4;


        if ($(this).attr('data-category') == 'pendants') {
            // Since we're only adding half of the y-padding, round to nearest 50 to maintain 25px steps
            image_padding_y = Math.round((image_padding_x + image_height)/50)*50 - image_height - 8; 
            $(this).css({
                'height':(image_height + (image_padding_y/2))+'px',
                'width':(image_width + image_padding_x)+'px'
            });
            $image.css({
                'margin-left':(image_padding_x/2)+'px',
                'margin-top':0
            });
        } else {
            $(this).css({
                'height':(image_height + image_padding_y)+'px',
                'width':(image_width + image_padding_x)+'px'
            });
            $image.css({
                'margin-left':(image_padding_x/2)+'px',
                'margin-bottom':(image_padding_y/2)+'px',
                'margin-top':(image_padding_y/2)+'px'
            });
        }
      console.log("item: "+$(this).index()+" pad-x: "+image_padding_x+" pad-y: "+image_padding_y);

        last_item_index = $(this).index() + 1;
        
    });

    $('.animation').css('margin-top','0');
    
    $('.container').isotope({
          itemSelector : '.element',
          layoutMode: 'spineAlign',
          spineAlign: {
            gutterWidth: 0
          }
        },
        function() {
            $('.container').hide().removeClass('invisible').fadeIn();
        }
    );


   

    // grab product shopify json api
    function getProduct(product) { 
        return $.ajax({
            url: '/products/' + product + '.js',
            dataType: 'json'
        });
    }

    function expand_element(target) {
        var  expanded = $('.element.expanded');
        contract_element(expanded);
        target.addClass('expanded');
        if(target.attr('data-category') === 'pendants') {
            target.addClass('pendants-viewer');
        }
        // console.log('expanding element '+target.attr('id'));
        var left_shift = 0;
        if (target.hasClass('right-column')) {
            // console.log('current right position: '+target.attr('data-x'));
            var container_shift = (($('.container').width() - elem_width) / 2) - target.attr('data-x');
        } else {
            // console.log('current left position: '+target.attr('data-x'));
            var container_shift =  elem_width + (($('.container').width() - elem_width) / 2) - target.attr('data-x') - target.attr('data-width');
            left_shift = target.attr('data-width') - elem_width;
        }
        // console.log('shifting container by: '+container_shift);
        // var container_width = $(window).width()+Math.abs(container_shift);
        // console.log('new container width: '+container_width);

        // get y-pos and height of previous element, and calculate how much the target element needs to move down
        // get y-pos and height of previous element, and calculate how much the target element needs to move down
        var prev_element_y       = target.prev().attr('data-y'),
            prev2_element_y       = target.prev().prev().attr('data-y'),
            current_y            = parseInt(target.attr('data-y')),
            next_element_y       = target.next().attr('data-y'),
            prev_element_h       = parseInt(target.prev().attr('data-height')),
            prev2_element_h       = parseInt(target.prev().prev().attr('data-height')),
            target_downshift;
      
            if (prev2_element_y == undefined) {
                prev2_element_y = prev_element_y;
                prev2_element_h = prev_element_h;
            }
    
            if (isNaN(prev_element_h)) {
                target_downshift     = elem_height + 4;
            } else {
                target_downshift     = Math.max((prev_element_h - (current_y - prev_element_y)),(prev2_element_h - (current_y - prev2_element_y))) + 4;    
                //target_downshift     = prev_element_h - (current_y - prev_element_y) + 4;    
            }
            
        var restofgrid_downshift = elem_height - (next_element_y - current_y) + target_downshift + 4;




        // console.log('current y: '+current_y+' next y: '+next_element_y);
        // console.log('prev_element_y: '+prev_element_y+' prev_element_h: '+prev_element_h+' downshift: '+target_downshift);
        // console.log('rest of grid downshift: '+restofgrid_downshift);


        // Move all subsequent elements down by the amount that the expanded element grows vertically
        var height_shift = elem_height - target.attr('data-height') + restofgrid_downshift;
        target.nextAll().css('top',restofgrid_downshift+'px');

        // Expand the actual element, and adjust margins of inner image
        //target.css({'width':'1000px','height':'500px','left':left_shift+'px'});

        //create new version of this that animates to larger sized final image
        //
        // if (target.attr('data-category') == 'pendants') {
        //     var image_margin_top = 0;
        // } else {
        //     var image_margin_top = (elem_height - target.find('img').height()) / 2;
        // }
        // var image_margin_bottom = (elem_height - target.find('img').height()) / 2;
        // var image_margin_sides = (elem_width - target.find('img').width()) / 2;
        // left_shift = ($('.container').width() - elem_width)/2 - target.attr('data-x');

        var img_cache = target.find('.collection-view-img'),
            image_new_width,
            image_new_height,
            product_image_left_offset;
        
        // keep copy of current width and height and image src
        collectionImg.curWidth = img_cache.width();
        collectionImg.curHeight = img_cache.height();
        collectionImg.currSrc = img_cache.attr('src');

        if (target.attr('data-category') === 'pendants') {
            image_new_width = 288;
            product_image_left_offset = 120;
        } else {
            image_new_width = 268;
            product_image_left_offset = 130;
        }

        var image_new_height = image_new_width / collectionImg.curWidth * collectionImg.curHeight;

        // check if image is too tall, 
        // if so cap it at elem height and then shrink width proportionally
        if (image_new_height > elem_height) {
            image_new_width = elem_height / image_new_height * image_new_width;
            image_new_height = elem_height;
        }

        if (target.attr('data-category') == 'pendants') {
            var image_margin_top = 0;
        } else {
            var image_margin_top = (elem_height - image_new_height) / 2;
        }
        var image_margin_bottom = (elem_height - image_new_height) / 2;
        var image_margin_left = product_image_left_offset;
        var image_margin_right = elem_width - image_new_width - image_margin_left;
        left_shift = ($('.container').width() - elem_width)/2 - target.attr('data-x');
      

        var product_handle = target.attr('data-product');
        var template = Handlebars.templates['product.source'];
    
        target.css({
                'top':target_downshift+'px',
                'left':left_shift+'px',
                'width': elem_width + 'px',
                'height': elem_height + 'px'
            });
        // todo: scroll top not working in firefox
        $('body, html').animate({scrollTop : (current_y + target_downshift) - 100},200);
        setTimeout(doAfter, 400);
        function doAfter() {
            $.when(
                getProduct(product_handle)

            ).done(
              function(data) {
                var context = data;
                var html    = template(context);
                $(html).appendTo(target);

                var prod = target.find('.product');

                // doing it this way seems to cause 
                // flash on main product image
                // prod.hide().css('visibility', 'visible').fadeIn();
                prod.css('visibility', 'visible'); // no fadeIn no flash
                

                var $productOptions  = target.find('.product-options-images'),
                    $variImages      = $productOptions.find('img'),
                    $variLinks       = $productOptions.find('a'),
                    $variants        = target.find('#product-select'),
                    $options         = $variants.find('option'),
                    $mainImage       = target.find('.collection-view-img'),
                    $materialTitle   = target.find('.selected-material')
                    $shareBtn        = target.find('.social-share-btn'),
                    $shareCon        = target.find('.social-share-con'),
                    $biggerImgBtn    = target.find('.bigger-image-btn'),
                    $smallerImgBtn   = target.find('.smaller-image-btn'),
                    $price           = target.find('.product-price'),
                    pattern          = /(_m_)(.*)(?=\.(gif|jpg|jpeg|tiff|png))/,
                    variPattern      = /(?:_vari?_)([0-9])*(?:_small)(?:\.(?:gif|jpg|jpeg|tiff|png))/,
                    altPattern       = /(?:_vari?_)([0-9])*(?:_alt)(?:\.(?:gif|jpg|jpeg|tiff|png))/,
                    firstImageSrc    = $($variImages[0]).attr('src'),
                    selectSize       = false;

                if ($('.product-sizes-con').length > 0) { 
                    selectSize = true;
                }

                if (firstImageSrc) {

                    var file2 = firstImageSrc.match(variPattern);

                    if(selectSize && !file2) {
                        $('.product-sizes-con').hide();
                    }

                    if (file2) {
                        var variPos      = parseInt(file2[1]) - 1,
                            cv           = $options[variPos],
                            $currentVari = $(cv);

                        $variants.find('option:selected').attr('selected', false);
                        $currentVari.attr('selected', true);
                        $materialTitle.text($currentVari.attr('data-title'));

                        if ($currentVari.attr('data-available') === 'true') {
                            $('#add').removeAttr('disabled');
                            if (parseInt($currentVari.attr('data-qty')) < 1 ) {
                                $price.text('$' + $currentVari.attr('data-price') + ' Pre Order');
                            } else {
                                var txt ='$' + $currentVari.attr('data-price');
                                $price.text(txt);  
                            }
                            
                        } else {
                            $('#add').attr('disabled', true);
                            $price.text('Item unavailable');
                        }
                     
                        // if sizes are available find 'em and show 'em
                        // TODO: this should be a function as the same code is used again below
                        if (selectSize) {
                            var variClass = $currentVari.attr('class'),
                            sizes = [];

                            $('.' + variClass).each(function(i){
                                sizes.push({
                                    'theSize' : $(this).attr('data-size'),
                                    'val'   : $(this).attr('value')
                                });
                            });
                        
                            sizes.sort(function (a, b) {
                                if (a.theSize > b.theSize)
                                    return 1;
                                if (a.theSize < b.theSize)
                                    return -1;
                                // a must be equal to b
                                return 0;
                            });
                            var html = '';
                            for(var i=0, l=sizes.length; i<l; i++) {
                                if (i === 0) {
                                    html += '<li data-value="' + sizes[i].val + '" class="selected-size">' + sizes[i].theSize + '</li>';    
                                } else {
                                    html += '<li data-value="' + sizes[i].val + '">' + sizes[i].theSize + '</li>';    
                                }
                            }

                            var $productSizes = $(target.find('.product-sizes'));
                            $productSizes.empty();
                            $productSizes.append(html);

                            var val = sizes[0].val;
                            $variants.find('option:selected').attr('selected', false);
                            $variants.find('option[value="' + val + '"]').attr('selected', true);
                        }   
    
                    }
                    
                }
                

                var mat = $materialTitle.text();
                mat = mat.trim();
                if (mat === '') {
                    var tmp = $variants.find('option');
                    $(tmp[0]).attr('selected', true);
                    $materialTitle.text($(tmp[0]).attr('data-title'));
                }
                

                $shareBtn.on('click', function(e){
                    e.preventDefault();
                    $shareCon.toggleClass('is-open');
                });

                // image enlarger
                $biggerImgBtn.on('click', function(e){
                    e.preventDefault();

                    var current_increase = img_cache.width() / productImg.cur_width + .25,
                        $img_viewer = target.find('.image-viewer'),
                        max_increase = 2;

                    if ( current_increase <= max_increase ) {
                        var enlarged_width  = current_increase * productImg.cur_width,
                            enlarged_height = current_increase * productImg.cur_height,
                            imgViewerWidth  = $img_viewer.width(),
                            imgViewerHeight = $img_viewer.height(),
                            curr_left       = (imgViewerWidth - img_cache.width()) / 2,
                            curr_top        = (imgViewerHeight - img_cache.height()) / 2,
                            enlarged_left   = (imgViewerWidth - enlarged_width) / 2,
                            enlarged_top    = (imgViewerHeight - enlarged_height) / 2;

                        enlarged_left = (enlarged_left - curr_left) + parseInt(img_cache.css('left'));

                        var checkWidth  = enlarged_width * .5,
                            checkHeight = enlarged_height * .5;

                        if ((enlarged_left + enlarged_width) < checkWidth ) {
                            enlarged_left = -enlarged_width + checkWidth;
                        } else if ((imgViewerWidth - enlarged_left) < checkWidth) {
                            enlarged_left = imgViewerWidth - checkWidth;
                        }
                        
                        if(img_cache.hasClass('pendants')) {
                            if (parseInt(img_cache.css('top')) === 0 ) {
                                enlarged_top = 0;
                            } else {
                                enlarged_top  = (enlarged_top - curr_top) + parseInt(img_cache.css('top'));

                                if ((enlarged_top + enlarged_height) < checkHeight ) {
                                    enlarged_top = -enlarged_height + checkHeight;
                                }  else if ((imgViewerHeight - enlarged_top) < checkHeight) {
                                    enlarged_top = imgViewerHeight - checkHeight;
                                }  
                            }
                        } else {
                            enlarged_top  = (enlarged_top - curr_top) + parseInt(img_cache.css('top'));
                            if ((enlarged_top + enlarged_height) < checkHeight ) {
                                enlarged_top = -enlarged_height + checkHeight;
                            } else if ((imgViewerHeight - enlarged_top) < checkHeight) {
                                enlarged_top = imgViewerHeight - checkHeight;
                            }    
                        }

                        img_cache.animate({
                            'width'  : enlarged_width + 'px',
                            'height' : enlarged_height + 'px',
                            'left'   : enlarged_left + 'px',
                            'top'    : enlarged_top + 'px'
                        }, 100);   
                    }

                    if (productImg.isDraggable === false) {
                        $('.image-viewer')
                            .on('mouseenter', function(e){
                                img_cache.draggable();
                                productImg.isDraggable = true;
                            })
                            .on('mouseleave', function(e){
                                img_cache.draggable('destroy');
                            });
                    }
                    
                });

                $smallerImgBtn.on('click', function(e){
                    e.preventDefault();

                    var current_decrease = img_cache.width() / productImg.cur_width - .25,
                        $img_viewer = target.find('.image-viewer'),
                        max_decrease = 1;

                    if ( current_decrease >= max_decrease ) {
                        var enlarged_width  = current_decrease * productImg.cur_width,
                            enlarged_height = current_decrease * productImg.cur_height,
                            imgViewerWidth  = $img_viewer.width(),
                            imgViewerHeight = $img_viewer.height(),
                            curr_left       = (imgViewerWidth - img_cache.width()) / 2,
                            curr_top        = (imgViewerHeight - img_cache.height()) / 2,
                            enlarged_left   = (imgViewerWidth - enlarged_width) / 2,
                            enlarged_top    = (imgViewerHeight - enlarged_height) / 2;

                        enlarged_left = (enlarged_left - curr_left) + parseInt(img_cache.css('left'));
                        
                        var checkWidth  = enlarged_width * .5,
                            checkHeight = enlarged_height * .5;
                           
                        if ((enlarged_left + enlarged_width) < checkWidth ) {
                            enlarged_left = -enlarged_width + checkWidth;
                        } else if ((imgViewerWidth - enlarged_left) < checkWidth) {
                            enlarged_left = imgViewerWidth - checkWidth;
                        }

                        if(img_cache.hasClass('pendants')) {
                            if (parseInt(img_cache.css('top')) === 0 ) {
                                enlarged_top = 0;
                            } else {
                                enlarged_top  = (enlarged_top - curr_top) + parseInt(img_cache.css('top'));
                                if ((enlarged_top + enlarged_height) < checkHeight ) {
                                    enlarged_top = -enlarged_height + checkHeight;
                                } else if ((imgViewerHeight - enlarged_top) < checkHeight) {
                                    enlarged_top = imgViewerHeight - checkWidth;
                                } 
                            }
                        } else {
                            enlarged_top  = (enlarged_top - curr_top) + parseInt(img_cache.css('top'));
                            if ((enlarged_top + enlarged_height) < checkHeight ) {
                                enlarged_top = -enlarged_height + checkHeight;
                            } else if ((imgViewerHeight - enlarged_top) < checkHeight) {
                                enlarged_top = imgViewerHeight - checkHeight;
                            }
                        }

                        img_cache.animate({
                            'width'  : enlarged_width + 'px',
                            'height' : enlarged_height + 'px',
                            'left'   : enlarged_left + 'px',
                            'top'    : enlarged_top + 'px'
                        }, 100);
                        
                    }

                });

                $variLinks.on('click', function(e){
                    e.preventDefault();
                    var $this = $(this),
                        earl = $this.attr('href'),
                        currImg = $this.find('img'),
                        imgSrc = currImg.attr('src');
                        
                        $productOptions.find('.active').removeClass('active');
                        currImg.parent().parent().addClass('active');
                        
                        var file = imgSrc.match(pattern);
                        if (file) {
                            var currentVari = file[2].split('_').join('-');
                            currentVari = currentVari.toLowerCase();
                            $variants.find('option:selected').attr('selected', false);
                            var t = $variants.find('.' + currentVari);
                            $(t).attr('selected', true);
                            $materialTitle.text($(t).attr('data-title'));
                        }

                        var file2 = imgSrc.match(variPattern);

                        if (file2) {
                            var variPos      = parseInt(file2[1]) - 1,
                                currentVari  = $options[variPos],
                                $currentVari = $(currentVari);

                            $variants.find('option:selected').attr('selected', false);
                            $currentVari.attr('selected', true);
                            $materialTitle.text($currentVari.attr('data-title'));

                            if ($currentVari.attr('data-available') === 'true') {
                                $('#add').removeAttr('disabled');
                                if (parseInt($currentVari.attr('data-qty')) < 1 ) {
                                    $price.text('$' + $currentVari.attr('data-price') + ' Pre Order');
                                } else {
                                    var txt ='$' + $currentVari.attr('data-price');
                                    $price.text(txt);  
                                }
                                
                            } else {
                                $('#add').attr('disabled', true);
                                $price.text('Item unavailable');
                            }
                            
                            
                        }

                        $mainImage.attr('src', earl);

                        // if sizes are available find 'em and show 'em
                        // TODO: this should be a function as the same code is used again above
                        if (selectSize) {
                            var variClass = $(currentVari).attr('class'),
                            sizes = [];

                            $('.' + variClass).each(function(i){

                                sizes.push({
                                    'theSize' : $(this).attr('data-size'),
                                    'val'   : $(this).attr('value')
                                });
                            });
                        
                            sizes.sort(function (a, b) {
                                if (a.theSize > b.theSize)
                                    return 1;
                                if (a.theSize < b.theSize)
                                    return -1;
                                // a must be equal to b
                                return 0;
                            });
                            var html = '';
                            for(var i=0, l=sizes.length; i<l; i++) {
                                if (i === 0) {
                                    html += '<li data-value="' + sizes[i].val + '" class="selected-size">' + sizes[i].theSize + '</li>';    
                                } else {
                                    html += '<li data-value="' + sizes[i].val + '">' + sizes[i].theSize + '</li>';    
                                }
                            }

                            var $productSizes = $(target.find('.product-sizes'));
                            $productSizes.empty();
                            $productSizes.append(html);

                            var val = sizes[0].val;
                            $variants.find('option:selected').attr('selected', false);
                            $variants.find('option[value="' + val + '"]').attr('selected', true);
                        }

                });
                
                // if sizes are available, track their click events
                if(selectSize) {
                    var $productSizes = $(target.find('.product-sizes'));
                    $productSizes.on('click', 'li', function(e){
                        e.preventDefault();
                        var $this = $(this);
                        $productSizes.find('.selected-size').removeClass('selected-size');
                        $this.addClass('selected-size');
                        var val = $this.attr('data-value');
                        $variants.find('option:selected').attr('selected', false);
                        $variants.find('option[value="' + val + '"]').attr('selected', true);
                    });
                }
                
                // more than three images, track click on UI for flexslider
                if (data.images.length > 3) {
                    var $flexy = target.find('.flexslider'),
                    $prevBtn = target.find('.product-slider-prev'),
                    $nextBtn = target.find('.product-slider-next');

                    $flexy.imagesLoaded(function(){

                        $flexy.flexslider({
                            controlNav: false,
                            directionNav: false,
                            slideshow: false,
                            animation: 'slide'
                        });

                        $prevBtn.on('click', function(e){
                            e.preventDefault();
                            $flexy.flexslider('previous');
                        });

                        $nextBtn.on('click', function(e){
                            e.preventDefault();
                            $flexy.flexslider('next');
                        });
                    });

                }
            });
        }

        // Adjust scroll to the top of the expanded element
        // var element_ypos = target.css("-webkit-transform").toString().replace(")","").split(',');

        img_cache.animate({
            'margin-top':image_margin_top+'px',
            'margin-right':image_margin_right+'px',
            'margin-bottom':image_margin_bottom+'px',
            'margin-left':image_margin_left+'px',
            'width': image_new_width+'px',
            'height': image_new_height+'px'
        },200, function(){
            var $this = $(this),
                viewer_img_top = 0,
                viewer_img_left = 0;
        
            // set product view main image state
            productImg.margin_top    = image_margin_top;
            productImg.margin_right  = image_margin_right;
            productImg.margin_bottom = image_margin_bottom;
            productImg.margin_left   = image_margin_left;
            productImg.cur_width     = image_new_width;
            productImg.cur_height    = image_new_height;
            productImg.orginal_image = img_cache.attr('src');
            productImg.isDraggable   = false;

            // wrap image in viewer and then position it
            $this.wrap('<div class="image-viewer"></div>');
            var $img_viewer = target.find('.image-viewer');
            $this.removeAttr('style');

            // if it's not at the top set a height diff than zero
            if (image_margin_top > 0) {
                viewer_img_top = ($img_viewer.height() - image_new_height) / 2;
            }

            // get left position
            viewer_img_left = ($img_viewer.width() - image_new_width) / 2;


            $this.css({
                'width'  : image_new_width + 'px',
                'height' : image_new_height + 'px',
                'left'   : viewer_img_left + 'px',
                'top'    : viewer_img_top + 'px'
            });
        });
    }

    function contract_element(target) {
        target.removeClass('expanded product');
        target.find('article').remove();
        var img_cache = target.find('.collection-view-img');
        
        // $('.container').css({'left':'0','width': $(window).width()+'px'});
        $('.element').css('top','0');
        target.css({'width':target.attr('data-width')+'px','height':target.attr('data-height')+'px','left':'0'});

        // Adjust margins of inner image
        if (target.attr('data-category') == 'pendants') {
            var image_margin_top = 0;
        } else {
            var image_margin_top = (target.attr('data-height') - collectionImg.curHeight) / 2;
        }
        var image_margin_bottom = (target.attr('data-height') - collectionImg.curHeight) / 2;
        var image_margin_sides = (target.attr('data-width') - collectionImg.curWidth) / 2;

        // remove the image-viewer
        // set the image back to where it started, then animate it back to collection
        img_cache
            .unwrap()
            .removeAttr('style')
            .css({
                'margin-top'    : productImg.margin_top +'px',
                'margin-right'  : productImg.margin_right +'px',
                'margin-bottom' : productImg.margin_bottom +'px',
                'margin-left'   : productImg.margin_left +'px',
                'width'         : productImg.cur_width,
                'height'        : productImg.cur_height,
            })
            .animate({
                'margin-top':image_margin_top+'px',
                'margin-right':image_margin_sides+'px',
                'margin-bottom':image_margin_bottom+'px',
                'margin-left':image_margin_sides+'px',
                'width': collectionImg.curWidth,
                'height': collectionImg.curHeight
            });
            img_cache.attr('src', collectionImg.currSrc);
    }

    // open the next item
    $('.container').on('click', '.product-next-btn', function(e){
        e.preventDefault();
        var $element_container = $(this).parent().parent(),
            current_index = parseInt($element_container.attr('data-index'), 10),
            next_index,
            $next_item;

        if(current_index === last_item_index) {
            next_index = 1;
        } else {
            next_index = current_index + 1;
        }

        // grab next item
        $next_item = $('#elem' + next_index);
        
        contract_element($element_container);
        expand_element($next_item);
    });

    // open the next item
    $('.container').on('click', '.product-prev-btn', function(e){
        e.preventDefault();
        var $element_container = $(this).parent().parent(),
            current_index = parseInt($element_container.attr('data-index'), 10),
            prev_index,
            $prev_item;

        if(current_index === 1) {
            prev_index = last_item_index;
        } else {
            prev_index = current_index - 1;
        }

        // grab next item
        $prev_item = $('#elem' + prev_index);
        
        contract_element($element_container); // close current elem
        expand_element($prev_item); // open prev elem
    });

    // close button to close open elements
    $('.container').on('click', '.product-close-btn', function(e){
        e.preventDefault();
        var $element_container = $(this).parent().parent();
        contract_element($element_container);
    });

    // elements expand on click
    $('.element').on('click', function(e){
        var $this = $(this);
        if($this.hasClass('expanded')) {
            // do nothing
        } else {
            expand_element($(this));    
        }
    });

});
